nameOverride: ""
namespaceOverride: ""

ollama:
  # -- Disable embedded Ollama since we're using AWS Bedrock
  enabled: false

pipelines:
  enabled: false  # Simplified for first step

tika:
  enabled: false

# -- List of Ollama API endpoints (empty since using Bedrock)
ollamaUrls: []
ollamaUrlsFromExtraEnv: false

websocket:
  enabled: false

redis-cluster:
  enabled: false

clusterDomain: cluster.local

annotations: {}
podAnnotations: {}
podLabels: {}
replicaCount: 1

# -- Strategy for StatefulSet
strategy:
  type: RollingUpdate

image:
  repository: ghcr.io/open-webui/open-webui
  tag: ""
  pullPolicy: "IfNotPresent"

serviceAccount:
  enable: true
  name: "open-webui-sa"
  annotations: {}
  automountServiceAccountToken: false

imagePullSecrets: []

# -- Health check probes
livenessProbe:
  httpGet:
    path: /health
    port: http
  failureThreshold: 3
  periodSeconds: 10

readinessProbe:
  httpGet:
    path: /health
    port: http
  failureThreshold: 1
  periodSeconds: 10

startupProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 5
  failureThreshold: 20

resources:
  limits:
    cpu: 1000m
    memory: 2Gi
  requests:
    cpu: 500m
    memory: 1Gi

copyAppData:
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi

managedCertificate:
  enabled: false

ingress:
  enabled: false
  #class: "nginx"
  #annotations:
  #  cert-manager.io/cluster-issuer: letsencrypt-prod
  #  nginx.ingress.kubernetes.io/proxy-body-size: "0"
  #  nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
  #  nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
  #host: "chat.dupa.casa"
  #tls: true
  #existingSecret: "chat-tls"

# -- Persistent storage configuration using your existing PVC
persistence:
  enabled: true
  size: 5Gi
  existingClaim: "openwebui-pvc"  # Using your pre-created PVC
  subPath: ""
  accessModes:
    - ReadWriteMany  # Matching your PVC access mode
  storageClass: "qnap-chat"  # Using your QNAP storage class
  selector: {}
  annotations: {}
  provider: local

nodeSelector: {}
tolerations: []
affinity: {}
topologySpreadConstraints: []
hostAliases: []

service:
  type: ClusterIP
  annotations: {}
  port: 80
  containerPort: 8080
  nodePort: ""
  labels: {}
  loadBalancerClass: ""

# -- AWS Bedrock configuration
enableOpenaiApi: true
openaiBaseApiUrl: ""

# -- AWS Bedrock endpoints for Spain region
openaiBaseApiUrls:
  - "https://bedrock-runtime.eu-south-2.amazonaws.com"  # Spain region

# -- Environment variables for Open WebUI - STEP 1: REGISTRATION ENABLED
extraEnvVars:
  # -- AWS Bedrock credentials from your External Secret
  - name: AWS_ACCESS_KEY_ID
    valueFrom:
      secretKeyRef:
        name: aws-secret
        key: access_key
  - name: AWS_SECRET_ACCESS_KEY
    valueFrom:
      secretKeyRef:
        name: aws-secret
        key: secret_key
  - name: AWS_DEFAULT_REGION
    value: "eu-south-2"  # Spain region
  
  # -- STEP 1: Enable registration to create admin account
  - name: DEFAULT_USER_ROLE
    value: "admin"  # First user will be admin
  - name: ENABLE_SIGNUP
    value: "false"   # Enable public signup for first step
  - name: ENABLE_LOGIN_FORM
    value: "true"
  - name: WEBUI_AUTH
    value: "true"
  
  # -- Bedrock model configuration
  - name: DEFAULT_MODELS
    value: "eu.anthropic.claude-sonnet-4-20250514-v1:0"  # Claude 3.5 Sonnet
  - name: ENABLE_MODEL_FILTER
    value: "true"
  
  # -- WebUI secret key
  - name: WEBUI_SECRET_KEY
    valueFrom:
      secretKeyRef:
        name: openwebui-access
        key: secret_key
  
  # -- Additional OpenWebUI settings
  - name: ENABLE_ADMIN_EXPORT
    value: "true"
  - name: ENABLE_ADMIN_CHAT_ACCESS
    value: "true"
  - name: CORS_ALLOW_ORIGIN
    value: "*"

  - name: RAG_EMBEDDING_ENGINE
    value: ""
  - name: RAG_EMBEDDING_MODEL
    value: ""
  - name: ENABLE_RAG_WEB_SEARCH
    value: "false"
  - name: ENABLE_RAG_LOCAL_WEB_SEARCH
    value: "false"
  - name: RAG_TOP_K
    value: "0"
  - name: CHUNK_SIZE
    value: "0"
  - name: CHUNK_OVERLAP
    value: "0"
  - name: ENABLE_RAG_HYBRID_SEARCH
    value: "false"

commonEnvVars: []
extraEnvFrom: []

runtimeClassName: ""

volumeMounts:
  initContainer: []
  container: []

extraInitContainers: []

volumes: []

# -- Security context adjusted for SMB storage
podSecurityContext:
  fsGroup: 0
  fsGroupChangePolicy: "OnRootMismatch"
  runAsUser: 0  # Changed to root for SMB compatibility
  runAsNonRoot: false  # Allow root for SMB

containerSecurityContext:
  runAsUser: 0  # Changed to root for SMB compatibility
  runAsGroup: 0
  runAsNonRoot: false  # Allow root for SMB
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: false
  capabilities:
    drop:
      - ALL

# -- SSO configuration (disabled)
sso:
  enabled: false

extraResources: []

# -- Database configuration (using SQLite with persistent storage)
databaseUrl: ""

postgresql:
  enabled: false

# -- Logging configuration
logging:
  level: "info"
  components:
    main: "info"
    models: "info"
    ollama: "debug"
    openai: "debug"