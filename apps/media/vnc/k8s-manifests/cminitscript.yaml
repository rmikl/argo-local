apiVersion: v1
kind: ConfigMap
metadata:
  name: init-vnc
data:
  init.sh: |
    
    export DEBIAN_FRONTEND="noninteractive"

    # Prepare system
    sudo apt update && sudo apt install -y \
      wget \
      curl \
      apt-transport-https \
      software-properties-common \
      gpg

    # Key management for repositories (modern approach)
    sudo mkdir -p /etc/apt/keyrings

    # Microsoft VSCode (verified from packages.microsoft.com/repos/vscode/dists/stable)
    wget -qO- https://packages.microsoft.com/keys/microsoft.asc | \
      sudo gpg --dearmor -o /etc/apt/keyrings/microsoft-vscode.gpg
    echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/microsoft-vscode.gpg] https://packages.microsoft.com/repos/vscode stable main" | \
      sudo tee /etc/apt/sources.list.d/vscode.list

    # GitHub CLI (fixed signing key)
    curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | \
      sudo gpg --dearmor -o /etc/apt/keyrings/githubcli-archive-keyring.gpg
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | \
      sudo tee /etc/apt/sources.list.d/github-cli.list

    # Kubernetes (using pool structure from packages.cloud.google.com)
    curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | \
      sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-archive-keyring.gpg

    # Update with verified sources
    sudo apt update -o Acquire::Check-Valid-Until=false

    # Install packages with proper repository validation
    sudo apt install -y \
      code \
      git \
      gh \
      vim \
      fzf \
      inetutils-ping \
      inetutils-telnet \
      zsh \
      sshpass \
      tilix \
      engrampa \
      containerd \
      docker-ce \
      docker-ce-cli

    # Cleanup legacy keyring references
    sudo rm -f /etc/apt/trusted.gpg.d/*

    #OTHER BINS
    KUBECTL_VERSION=$(curl -L -s https://dl.k8s.io/release/stable.txt | grep -oP 'v\d+\.\d+\.\d+')
    sudo wget "https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl" -O /usr/local/bin/kubectl && sudo chmod +x /usr/local/bin/kubectl

    sudo wget https://github.com/derailed/k9s/releases/download/v0.32.5/k9s_linux_amd64.deb && sudo apt install ./k9s_linux_amd64.deb &&  rm k9s_linux_amd64.deb
    sh -c "$(wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)"

    #OTHER CONFIG
    sudo sed -i 's|/bin/bash|/usr/bin/zsh|g' /etc/passwd
    chsh -s $(which zsh)

    echo "abc:$PASSWORD" | sudo chpasswd
    sudo chmod 777 /config/.zshrc
    sudo cat <<'EOF' >> ~/.zshrc
    ns() {
      local new_namespace="$1"
      if [ -z "$new_namespace" ]; then
        echo "UÅ¼ycie: ns <namespace>"
        return 1
      fi
      sed -i 's|^alias k=.*|alias k="kubectl -n '"$new_namespace"'"|' ~/.zshrc
      echo "Zaktualizowano alias k na: kubectl -n $new_namespace"
      source ~/.zshrc
    }
    acp() {
      git add -A;git commit -m "$1";git push origin HEAD
    }
    aca() {
      git add -A;git commit --amend --no-edit ;git push origin HEAD --force
    }
    alias lapdell="sshpass -p $LOCAL_NODES_PWD ssh -o  StrictHostKeyChecking=no robert@192.168.1.33"
    alias lapmsi="sshpass -p $LOCAL_NODES_PWD ssh -o  StrictHostKeyChecking=no robert@192.168.1.36"
    alias lapsamsung="sshpass -p $LOCAL_NODES_PWD ssh -o  StrictHostKeyChecking=no robert@192.168.1.27"
    alias pc1="sshpass -p $LOCAL_NODES_PWD ssh -o  StrictHostKeyChecking=no robert@192.168.1.38"
    alias pc2="sshpass -p $LOCAL_NODES_PWD ssh -o  StrictHostKeyChecking=no robert@192.168.1.21"
    alias raspi44gb="sshpass -p $LOCAL_NODES_PWD ssh -o  StrictHostKeyChecking=no robert@192.168.1.40"
    alias raspi48gb="sshpass -p $LOCAL_NODES_PWD ssh -o  StrictHostKeyChecking=no robert@192.168.1.39"
    alias w="watch -n 1 "
    alias ctr="sudo ctr -n k8s.io"
    alias k=kubectl
    EOF

    sed -i 's|^plugins=(git)$|plugins=(git kubectl)|' /config/.zshrc
    git config --global user.name rmikl
    git config --global user.email robert.miklas@protonmail.com
    git config --global core.editor code
    git config --global --add safe.directory /mnt/qnap/repos/argo-local
    git config --global --add safe.directory /mnt/qnap/repos/helm_predeploy
    git config --global --add safe.directory /mnt/qnap/repos/docker
    sudo git config --global user.name rmikl
    sudo git config --global user.email robert.miklas@protonmail.com
    sudo git config --global core.editor code
    sudo git config --global --add safe.directory /mnt/qnap/repos/argo-local
    sudo git config --global --add safe.directory /mnt/qnap/repos/helm_predeploy
    sudo git config --global --add safe.directory /mnt/qnap/repos/docker

    echo $GITHUB_TOKEN_RAW | gh auth login --with-token     
    echo $GITHUB_TOKEN_RAW | sudo gh auth login --with-token     
    gh auth setup-git
    sudo gh auth setup-git
    mkdir -p /config/.kube
    cp /config/kube/config /config/.kube/config
    chmod 700 /config/.kube/
    chmod 600 /config/.kube/config
    sudo chown abc:abc /config/.kube/ -R 
---


